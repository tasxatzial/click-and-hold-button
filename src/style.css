* {
    box-sizing: border-box;
}

body {
    display: flex;
    flex-direction: column;
    gap: 3rem;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

[data-btn="css-transition"] {
    --bg-clr: hsl(50, 85%, 90%);
    --hover-clr: hsl(50, 85%, 80%);
    --fill-clr: hsl(50, 85%, 70%);
}

[data-btn="animationFrame-css-transform"] {
    --bg-clr: hsl(100, 85%, 90%);
    --hover-clr: hsl(100, 85%, 80%);
    --fill-clr: hsl(100, 85%, 70%);
}

[data-btn="animationFrame-css-transition"] {
    --bg-clr: hsl(0, 85%, 90%);
    --hover-clr: hsl(0, 85%, 80%);
    --fill-clr: hsl(0, 85%, 70%);
}

.click-and-hold {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10;
    width: 15rem;
    height: 15rem;
    padding: 1em;
    border: 1px solid rgb(0 0 0 / 0.2);
    border-radius: 5px;
    box-shadow: 0px 2px 10px 1px rgb(0 0 0 / 0.5);
    background-color: var(--bg-clr);
    overflow: hidden;
    cursor: pointer;
}

@media (hover:hover) {
    .click-and-hold:hover {
        background-color: var(--hover-clr);
    }
}

.click-and-hold .fill {
    position: absolute;
    z-index: -1;
    inset: 0 -100%;
    width: 100%;
    height: 100%;
    background-color: var(--fill-clr);
    transform: translateX(0);
}

.click-and-hold .text {
    text-align: center;
    font-size: 2rem;
}

.click-and-hold[data-active-hold] {
    position: relative;
    top: 3px;
    box-shadow: 0px 2px 4px 1px rgb(0 0 0 / 0.5);
}

/* Animation using (animation.js or animationFrame.js) + CSS transition */
[data-btn="css-transition"].click-and-hold[data-active-hold] .fill,
[data-btn="animationFrame-css-transition"].click-and-hold[data-active-hold] .fill {
    transition: transform var(--hold-duration) linear;
    transform: translateX(100%);
}

/* Animation using animationFrame.js + CSS transform */
[data-btn="animationFrame-css-transform"].click-and-hold[data-active-hold] .fill {
    transform: translateX(var(--complete-percent));
}
